// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Database;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("WebApplication1.Models.InverterData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AC1_A")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC1_V")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC2_A")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC2_V")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC3_A")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC3_V")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC_Hz")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC_Var")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AC_W")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlarmCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlarmCodeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InverterId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MPPT01_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT02_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT03_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT04_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT05_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT06_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT07_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT08_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT09_V")
                        .HasColumnType("REAL");

                    b.Property<double>("MPPT10_V")
                        .HasColumnType("REAL");

                    b.Property<string>("OverPowerProtection")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PV01_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV02_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV03_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV04_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV05_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV06_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV07_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV08_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV09_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV10_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV11_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV12_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV13_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV14_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV15_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV16_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV17_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV18_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV19_A")
                        .HasColumnType("REAL");

                    b.Property<double>("PV20_A")
                        .HasColumnType("REAL");

                    b.Property<string>("PowerDownOperation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Standby")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Temp_C")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<double>("Today_kWh")
                        .HasColumnType("REAL");

                    b.Property<double>("Total_kWh")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("InverterData");
                });
#pragma warning restore 612, 618
        }
    }
}
